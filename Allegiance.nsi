; Credits: imago, pkk, tigereye (maybe someone else, I don't know)

; Script generated by the HM NIS Edit Script Wizard.

SetCompressor lzma
 
; Installer has to run as administrator
RequestExecutionLevel admin

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "Free"
!define PRODUCT_VERSION "Allegiance"
!define PRODUCT_PUBLISHER "The Free Allegiance Organization"
!define PRODUCT_WEB_SITE "http://www.freeallegiance.org"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

; enable Modern User Interface (MUI)
!include "MUI.nsh"

; WinVer
!include "WinVer.nsh"

; x64 detector
!include "x64.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_WELCOMEFINISHPAGE_BITMAP ".\Resources\Bitmaps\splash.bmp"
!define MUI_HEADERIMAGE
!define MUI_HEADERIMAGE_RIGHT
!define MUI_HEADERIMAGE_BITMAP ".\Resources\Bitmaps\header.bmp"
!define MUI_ICON ".\Resources\Bitmaps\allegb.ico"
!define MUI_UNICON ".\Resources\Bitmaps\allegb.ico"
!define MUI_FINISHPAGE_SHOWREADME "$INSTDIR\readme.rtf"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!define MUI_LICENSEPAGE_CHECKBOX
!insertmacro MUI_PAGE_LICENSE ".\Resources\Allegiance\EULA.RTF"
; Components page
!insertmacro MUI_PAGE_COMPONENTS
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; MUI end ------

SetFont "Tahoma" 8
BrandingText "Free Allegiance (Installer Build x)"

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "Allegiance Setup.exe"
InstallDir "$PROGRAMFILES\Microsoft Games\Allegiance"
ShowInstDetails show
ShowUnInstDetails show

Section "Allegiance Game" SEC01
  SectionIn RO
  SetDetailsPrint both
  DetailPrint "Extracting Files..."
  SetDetailsPrint textonly
  SetOutPath "$INSTDIR"
  SetOverwrite on
  File /r ".\Resources\Allegiance\*.*"
  SetDetailsPrint listonly
  DetailPrint "- Files Extracted!"
SectionEnd

; Option to unpack OGG files to wave - ogg decoder won't get deleted
Section /o "Unpack OGG Files" SEC02
  SetDetailsPrint both
  DetailPrint "Decoding audio files... "
  SetDetailsPrint listonly
  DetailPrint "(this will take several minutes)"
  SetDetailsPrint none
  SetOutPath "$INSTDIR\Artwork"
  ExecWait '"$INSTDIR\Artwork\oggdec.exe" "$INSTDIR\Artwork\*.ogg"'
  SetDetailsPrint listonly
  DetailPrint "... done"
SectionEnd

; Shortcuts for Startmenu/Desktop - This needs an option, because desktop icons are annoying
Section -AdditionalIcons
  SetDetailsPrint both
  DetailPrint "Creating start menu entries..."
  SetDetailsPrint none
  SetOutPath "$INSTDIR"
  ;CreateShortCut "$DESKTOP\Allegiance.lnk" "$INSTDIR\ASGSClient.exe"
  ;CreateShortCut "$DESKTOP\Allegiance Learning Guide.lnk" "http://www.freeallegiance.org/FAW/index.php/Learning_guide" "" "$INSTDIR\academy.ico"
  CreateDirectory "$SMPROGRAMS\Allegiance"
  CreateShortCut "$SMPROGRAMS\Allegiance\Allegiance.lnk" "$INSTDIR\ASGSClient.exe"
  CreateShortCut "$SMPROGRAMS\Allegiance\Allegiance - Learning Guide.lnk" "http://www.freeallegiance.org/FAW/index.php/Learning_guide" "" "$INSTDIR\academy.ico"
  CreateShortCut "$SMPROGRAMS\Allegiance\Allegiance - Tech Support.lnk" "http://www.freeallegiance.org/FAW/index.php/Tech_Support" "" "$INSTDIR\allegg.ico"
  SetDetailsPrint listonly
  DetailPrint "... done"
SectionEnd

Section -Post
  SetDetailsPrint both
  DetailPrint "Creating Uninstaller..."
  SetDetailsPrint textonly

  ; Writing Uninstaller information
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
  SetDetailsPrint both
  DetailPrint "... done"
  
  DetailPrint "Creating registry keys..."
  SetDetailsPrint textonly
  ; Artpath
  WriteRegStr HKLM "Software\Microsoft\Microsoft Games\Allegiance\1.0" "ArtPath" "$INSTDIR\Artwork"
  ; EXE Path - Install directory of Allegiance.exe
  WriteRegStr HKLM "Software\Microsoft\Microsoft Games\Allegiance\1.0" "EXE Path" "$INSTDIR"
  ; CfgFile - Where to get config file
  WriteRegStr HKLM "Software\Microsoft\Microsoft Games\Allegiance\1.0" "CfgFile" "http://autoupdate.alleg.net/allegiance.cfg"
  ; CDKey - still used?
  WriteRegStr HKLM "Software\Microsoft\Microsoft Games\Allegiance\1.0" "CDKey" "FERAL-1234567890123456"
  ; FIRSTRUN - still used?
  WriteRegDWORD HKLM "Software\Microsoft\Microsoft Games\Allegiance\1.0" "FIRSTRUN" "1"
  ; HasTrained - Disables Training mission popup
  WriteRegDWORD HKLM "Software\Microsoft\Microsoft Games\Allegiance\1.0" "HasTrained" "1"
  ; BETA ArtPath - Defines Artwork path
  WriteRegStr HKLM "Software\Microsoft\Microsoft Games\Allegiance\1.1" "ArtPath" "$INSTDIR\Artwork"
  ; BETA EXE Path - This is why ASGS overwrites Allegiance.exe in beta mode
  WriteRegStr HKLM "Software\Microsoft\Microsoft Games\Allegiance\1.1" "EXE Path" "$INSTDIR"
  ; BETA CfgFile
  WriteRegStr HKLM "Software\Microsoft\Microsoft Games\Allegiance\1.1" "CfgFile" "http://fazdev.alleg.net/FAZ/FAZbeta.cfg"
  ; BETA CDKey
  WriteRegStr HKLM "Software\Microsoft\Microsoft Games\Allegiance\1.1" "CDKey" "FERAL-1234567890123456"
  ; BETA FIRSTRUN
  WriteRegDWORD HKLM "Software\Microsoft\Microsoft Games\Allegiance\1.1" "FIRSTRUN" "1"
  ; BETA HasTrained
  WriteRegDWORD HKLM "Software\Microsoft\Microsoft Games\Allegiance\1.1" "HasTrained" "1"
  SetDetailsPrint both
  DetailPrint "... done"
  
  ; The following allows users to run Allegiance without administrator rights
  DetailPrint "Updating access control list..."
  SetDetailsPrint textonly
  ; Allow users to write into Allegiance directory
  AccessControl::GrantOnFile "$INSTDIR" "(BU)" "GenericRead + GenericWrite"
  ; Allow users to write registry settings
  ${If} ${RunningX64}
    AccessControl::GrantOnRegKey HKLM "Software\\Wow6432Node\\Microsoft\\Microsoft Games\\Allegiance" "(BU)" "FullAccess"
  ${Else}
    AccessControl::GrantOnRegKey HKLM "Software\\Microsoft\\Microsoft Games\\Allegiance" "(BU)" "FullAccess"
  ${EndIf}
  SetDetailsPrint both
  DetailPrint "... done"
  
  ; Add exception to Windows Firewall
  SimpleFC::IsFirewallEnabled ; Is Windows Firewall enabled?
  Pop $0
  Pop $1
  ${If} $1 == 1
    ; This runs only, if Windows Firewall is active
    DetailPrint "Adding exceptions to Windows Firewall..."
    SetDetailsPrint textonly
    SimpleFC::AddApplication "FreeAllegiance - Game" "$INSTDIR\Allegiance.exe" 0 2 "" 1
    SimpleFC::AddApplication "FreeAllegiance - ASGS" "$INSTDIR\ASGSClient.exe" 0 2 "" 1
    SimpleFC::AddApplication "FreeAllegiance - ASGS Update" "$INSTDIR\ASGSUpdate.exe" 0 2 "" 1
    SetDetailsPrint both
    DetailPrint "... done"
  ${EndIf}
    
  DetailPrint "-- Installation Complete --"
SectionEnd

; Section descriptions
!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
  ; THIS CAKE IS A LIE!
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC01} "Basic game components."
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC02} "Transcodes the game audio from OGG to WAV.$\r$\rThis option is only recommended for slow computers and will increase install time."
!insertmacro MUI_FUNCTION_DESCRIPTION_END

; Uninstaller - success message
Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

; Uninstaller - initial message
Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "NOTICE: This uninstaller will remove ALL files and directories in the $(^Name) directory, including ones not placed there by the installer.  If you wish to save any of those files, click NO and back them up before proceeding.$\r$\rAre you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

; Initailisation of installer
Function .onInit
  Call WindowsVersionCheck
  Call DirectX9Check
  Call VC90Check
  Call DotNetVersionCheck
FunctionEnd

; Uninstaller - remove files
Section Uninstall
  SetDetailsPrint both
  DetailPrint "Please wait while Allegiance is uninstalled."
  SetDetailsPrint textonly
  SetOutPath "$INSTDIR"
  Delete "$DESKTOP\Allegiance.lnk"
  Delete "$DESKTOP\Allegiance Academy.lnk"
  Delete "$SMPROGRAMS\Allegiance\Allegiance.lnk"
  Delete "$SMPROGRAMS\Allegiance\Allegiance Academy.lnk"

  RMDir /r "$SMPROGRAMS\Allegiance"
  RMDir /r "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  SetAutoClose true
SectionEnd

; Check of Windows version
Function WindowsVersionCheck
  ; At least XP
  ${If} ${AtLeastWinXP}
    ; and at least Service Pack 2
    ${AndIf} ${AtLeastServicePack} 2
      goto ValidOS
  ${EndIf}

  ; Win9x/WinNT/Win2k/WinXPSP1
  ; Fire up error, that OS is outdated and not supported
  MessageBox MB_OK|MB_ICONSTOP "$(^Name) requires Microsoft Windows XP Service Pack 2 or higher."
  ; Abort setup
  Abort

  ValidOS:
FunctionEnd

; Check if .net framework 2.0 is installed
Function DotNetVersionCheck
  IfFileExists "$WINDIR\Microsoft.NET\Framework\v2.0.50727\MSBuild.exe" DotNetInstalled
  ; Fire up error, .net framework 2.0 is not installed
  MessageBox MB_OK|MB_ICONSTOP "$(^Name) requires the Microsoft .NET framework version 2.0.$\r$\rNote:$\r.net Framework 3.x or 4.x are no upgrades of 2.0, they are just different runtime environments."
   
  ; Choose between 32 and 64 bit download
  ${If} ${RunningX64}
    ; Only for Windows XP x64, because Vista and Win7 should have 2.0 already installed 
    ExecShell Open "http://download.microsoft.com/download/c/6/e/c6e88215-0178-4c6c-b5f3-158ff77b1f38/NetFx20SP2_x64.exe"
  ${Else}
    ExecShell Open "http://download.microsoft.com/download/c/6/e/c6e88215-0178-4c6c-b5f3-158ff77b1f38/NetFx20SP2_x86.exe "
  ${EndIf}
  ; Exit setup
  Abort

  DotNetInstalled:
  ; We got .net installed, so we contine setup
FunctionEnd

; Check if DirectX 9.0c June 2009 or later is installed
Function DirectX9Check
  ; Check for D3DX9_42.dll (June 2009)
  ; http://www.toymaker.info/Games/html/d3dx_dlls.html
  IfFileExists "$SYSDIR\D3DX9_42.dll" DirectXInstalled
  ; Fire up error, outdated DirectX 9.0c is installed
  MessageBox MB_OK|MB_ICONSTOP "You need to upgrade your DirectX.$\r$\rPress OK to contine."
  ; Run Webinstaller
  File ".\Resources\DirectX\dxwebsetup.exe"
  ExecWait "dxwebsetup.exe"
  
  DirectXInstalled:
  ; Contine installation
 FunctionEnd
 
; Check if VC9 is installed
Function VC90Check
  Push $R0
  ; http://social.msdn.microsoft.com/Forums/en-US/vssetup/thread/29a56f19-d21d-4cfd-a77b-4667dac8aca0
  ; http://blogs.msdn.com/b/astebner/archive/2009/01/29/9384143.aspx
  ReadRegStr $R0 HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\{FF66E9F6-83E7-3A3E-AF14-8DE9A809A6A4}" "DisplayName" ;VC90
  IfErrors 0 VC90Installed
  ReadRegStr $R0 HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\{9A25302D-30C0-39D9-BD6F-21E6EC160475}" "DisplayName" ;VC90SP1
  IfErrors 0 VC90Installed
  ReadRegStr $R0 HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\{1F1C2DFC-2D24-3E06-BCB8-725134ADF989}" "DisplayName" ;VC90SP1 ATL fix
  IfErrors 0 VC90Installed
  
  ; Fire up error, Visual C++ Redist is not installed
  MessageBox MB_OK|MB_ICONSTOP "You need to install Visual C++ 2008 runtimes.$\r$\rDownload and install it in your operation system language version.$\r$\rPress OK to contine."
  ; Run Webinstaller
  ExecShell Open "http://www.microsoft.com/downloads/en/details.aspx?FamilyID=a5c84275-3b97-4ab7-a40d-3802b2af5fc2"
  ; Exit setup
  Abort
  
  VC90Installed:
  ; Contine installation
  Exch $R0
 FunctionEnd